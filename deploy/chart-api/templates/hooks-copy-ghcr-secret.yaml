{{- if .Values.privateRegistry.enabled }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ghcr-secret-sync
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get","list","create","update","patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ghcr-secret-sync-{{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    name: ghcr-sync
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ghcr-secret-sync
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ghcr-sync
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ghcr-secret-copy
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  ttlSecondsAfterFinished: 120
  template:
    spec:
      serviceAccountName: ghcr-sync
      restartPolicy: Never
      containers:
        - name: copier
          image: bitnami/kubectl:1.31
          command: ["/bin/sh","-c"]
          args:
            - |
              set -euo pipefail
              DATA=$(kubectl get secret -n {{ .Values.privateRegistry.sourceSecretNamespace }} {{ .Values.privateRegistry.secretName }} -o jsonpath='{.data.\.dockerconfigjson}')
              cat <<'EOF' | kubectl apply -n {{ .Release.Namespace }} -f -
              apiVersion: v1
              kind: Secret
              metadata:
                name: {{ .Values.privateRegistry.secretName }}
              type: kubernetes.io/dockerconfigjson
              data:
                .dockerconfigjson: ${DATA}
              EOF
{{- end }}